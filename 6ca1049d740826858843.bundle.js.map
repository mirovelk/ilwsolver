{"version":3,"file":"6ca1049d740826858843.bundle.js","mappings":"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","sources":["webpack://ilwsolver/webpack/runtime/chunk loaded","webpack://ilwsolver/webpack/runtime/startup chunk dependencies","webpack://ilwsolver/./src/util/complex.ts","webpack://ilwsolver/./src/core/solve.ts","webpack://ilwsolver/./src/core/solve.worker.ts","webpack://ilwsolver/webpack/bootstrap","webpack://ilwsolver/webpack/runtime/amd define","webpack://ilwsolver/webpack/runtime/amd options","webpack://ilwsolver/webpack/runtime/define property getters","webpack://ilwsolver/webpack/runtime/ensure chunk","webpack://ilwsolver/webpack/runtime/get javascript chunk filename","webpack://ilwsolver/webpack/runtime/get mini-css chunk filename","webpack://ilwsolver/webpack/runtime/hasOwnProperty shorthand","webpack://ilwsolver/webpack/runtime/node module decorator","webpack://ilwsolver/webpack/runtime/publicPath","webpack://ilwsolver/webpack/runtime/importScripts chunk loading","webpack://ilwsolver/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(400).then(next);\n};","import { complex as mathComplex } from 'mathjs';\n\nexport type Complex = [r: number, i: number];\n\nexport function complex(r: number, i = 0): Complex {\n  return [r, i];\n}\n\nexport function copy(c: Complex): Complex {\n  return [...c];\n}\n\nexport function add(a: Complex, b: Complex): Complex {\n  return [a[0] + b[0], a[1] + b[1]];\n}\n\nexport function subtract(a: Complex, b: Complex): Complex {\n  return [a[0] - b[0], a[1] - b[1]];\n}\n\nexport function multiply(a: Complex, b: Complex): Complex {\n  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\n\nexport function inverse(a: Complex): Complex {\n  return [\n    a[0] / (a[0] * a[0] + a[1] * a[1]),\n    -a[1] / (a[0] * a[0] + a[1] * a[1]),\n  ];\n}\n\nexport function divide(a: Complex, b: Complex): Complex {\n  return multiply(a, inverse(b));\n}\n\nexport function minus(a: Complex): Complex {\n  return complex(-a[0], -a[1]);\n}\n\nexport function abs(a: Complex): number {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n}\n\nexport function getRandomNumberBetween(min: number, max: number) {\n  return parseFloat((Math.random() * (max - min + 1) + min).toFixed(20));\n}\n\nexport function getRandomComplexNumber(min: number, max: number): Complex {\n  return complex(\n    getRandomNumberBetween(min, max),\n    getRandomNumberBetween(min, max)\n  );\n}\n\nfunction stringifyNumber(number: number, full: boolean): string {\n  if (full) {\n    return number.toExponential().replaceAll('e', '*^');\n  } else {\n    return number\n      .toExponential(3)\n      .replaceAll('.000', '') // unnecessary\n      .replaceAll('e+0', '') // unnecessary\n      .replaceAll('e', '*^'); // used by mathematica\n  }\n}\n\nconst I = 'i';\n\nexport function stringifyComplex(complex: Complex, full = false): string {\n  const str = stringifyNumber(complex[0], full);\n  if (complex[1] < 0) {\n    return `${str}-${stringifyNumber(-complex[1], full)}${I}`;\n  } else if (complex[1] >= 0) {\n    return `${str}+${stringifyNumber(complex[1], full)}${I}`;\n  } else {\n    return str;\n  }\n}\n\nexport function parseComplex(str: string): Complex {\n  const c = [0, 0] as Complex;\n  if (\n    (str.slice(1).includes('+') || str.slice(1).includes('-')) &&\n    !str.includes(I) // check for missing \"I\"\n  ) {\n    throw new Error(`Invalid complex number: ${str}`);\n  }\n  const parsed = mathComplex(str.replaceAll('*^', 'e'));\n  c[0] = parsed.re;\n  c[1] = parsed.im;\n  return c;\n}\n\nexport function areComplexEqual(a: Complex, b: Complex): boolean {\n  return a[0] === b[0] && a[1] === b[1];\n}\n","import { lusolve } from 'mathjs';\n\nimport {\n  abs,\n  add,\n  Complex,\n  complex,\n  copy,\n  minus,\n  multiply,\n  subtract,\n} from 'util/complex';\n\nexport interface Ex {\n  E1: Complex;\n  E2: Complex;\n  E3: Complex;\n}\n\nexport interface Ax {\n  AL: Complex[];\n  AR: Complex[];\n}\n\nexport interface SolveConfig {\n  Ex: Ex;\n  Ax: Ax;\n}\n\n// input vector M, output vector M\nexport function eqns(\n  input: Complex[],\n  q: Complex,\n  config: SolveConfig\n): Complex[] {\n  const { E1, E2, E3 } = config.Ex;\n  const { AL, AR } = config.Ax;\n\n  const result: Complex[] = [];\n  for (let i = 0; i < input.length; i++) {\n    let tmp1 = copy(q);\n    let tmp2 = complex(1);\n\n    for (let j = 0; j < AL.length; j++) {\n      tmp1 = multiply(tmp1, subtract(input[i], AL[j]));\n      tmp2 = multiply(tmp2, subtract(input[i], AR[j]));\n    }\n\n    for (let j = 0; j < input.length; j++) {\n      if (j !== i) {\n        tmp1 = multiply(tmp1, add(subtract(input[i], input[j]), E1));\n        tmp2 = multiply(tmp2, subtract(subtract(input[i], input[j]), E1));\n\n        tmp1 = multiply(tmp1, add(subtract(input[i], input[j]), E2));\n        tmp2 = multiply(tmp2, subtract(subtract(input[i], input[j]), E2));\n\n        tmp1 = multiply(tmp1, add(subtract(input[i], input[j]), E3));\n        tmp2 = multiply(tmp2, subtract(subtract(input[i], input[j]), E3));\n      }\n    }\n\n    result.push(subtract(tmp1, tmp2));\n  }\n\n  return result;\n}\n\n// input vector M, output matrix MxM\nexport function eqnsd(\n  input: Complex[],\n  q: Complex,\n  config: SolveConfig\n): Complex[][] {\n  const { E1, E2, E3 } = config.Ex;\n  const { AL, AR } = config.Ax;\n\n  // empty matrix M*M\n  const result: Complex[][] = new Array(input.length)\n    .fill(undefined)\n    .map(() => new Array(input.length).fill(undefined));\n\n  for (let i = 0; i < input.length; i++) {\n    for (let j = 0; j < input.length; j++) {\n      if (i !== j) {\n        let tmp1 = minus(q);\n        let tmp2 = complex(-1);\n        for (let k = 0; k < AL.length; k++) {\n          tmp1 = multiply(tmp1, subtract(input[i], AL[k]));\n          tmp2 = multiply(tmp2, subtract(input[i], AR[k]));\n        }\n\n        for (let k = 0; k < input.length; k++) {\n          if (k !== i && k !== j) {\n            tmp1 = multiply(tmp1, add(subtract(input[i], input[k]), E1));\n            tmp2 = multiply(tmp2, subtract(subtract(input[i], input[k]), E1));\n\n            tmp1 = multiply(tmp1, add(subtract(input[i], input[k]), E2));\n            tmp2 = multiply(tmp2, subtract(subtract(input[i], input[k]), E2));\n\n            tmp1 = multiply(tmp1, add(subtract(input[i], input[k]), E3));\n            tmp2 = multiply(tmp2, subtract(subtract(input[i], input[k]), E3));\n          }\n        }\n\n        tmp1 = multiply(\n          tmp1,\n          add(\n            add(\n              multiply(\n                add(subtract(input[i], input[j]), E1),\n                add(subtract(input[i], input[j]), E2)\n              ),\n              multiply(\n                add(subtract(input[i], input[j]), E1),\n                add(subtract(input[i], input[j]), E3)\n              )\n            ),\n            multiply(\n              add(subtract(input[i], input[j]), E2),\n              add(subtract(input[i], input[j]), E3)\n            )\n          )\n        );\n\n        tmp2 = multiply(\n          tmp2,\n          add(\n            add(\n              multiply(\n                subtract(subtract(input[i], input[j]), E1),\n                subtract(subtract(input[i], input[j]), E2)\n              ),\n              multiply(\n                subtract(subtract(input[i], input[j]), E1),\n                subtract(subtract(input[i], input[j]), E3)\n              )\n            ),\n            multiply(\n              subtract(subtract(input[i], input[j]), E2),\n              subtract(subtract(input[i], input[j]), E3)\n            )\n          )\n        );\n        result[i][j] = subtract(tmp1, tmp2);\n      } else {\n        result[i][i] = complex(0);\n\n        for (let k = 0; k < AL.length; k++) {\n          let tmp1 = copy(q);\n          let tmp2 = complex(1);\n\n          for (let l = 0; l < AL.length; l++) {\n            if (l !== k) {\n              tmp1 = multiply(tmp1, subtract(input[i], AL[l]));\n              tmp2 = multiply(tmp2, subtract(input[i], AR[l]));\n            }\n          }\n\n          for (let l = 0; l < input.length; l++) {\n            if (l !== i) {\n              tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E1));\n              tmp2 = multiply(tmp2, subtract(subtract(input[i], input[l]), E1));\n\n              tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E2));\n              tmp2 = multiply(tmp2, subtract(subtract(input[i], input[l]), E2));\n\n              tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E3));\n              tmp2 = multiply(tmp2, subtract(subtract(input[i], input[l]), E3));\n            }\n          }\n          result[i][i] = add(subtract(tmp1, tmp2), result[i][i]);\n        }\n\n        for (let k = 0; k < input.length; k++) {\n          if (k !== i) {\n            let tmp1 = copy(q);\n            let tmp2 = complex(1);\n\n            for (let l = 0; l < AL.length; l++) {\n              tmp1 = multiply(tmp1, subtract(input[i], AL[l]));\n              tmp2 = multiply(tmp2, subtract(input[i], AR[l]));\n            }\n\n            for (let l = 0; l < input.length; l++) {\n              if (l !== i && l !== k) {\n                tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E1));\n                tmp2 = multiply(\n                  tmp2,\n                  subtract(subtract(input[i], input[l]), E1)\n                );\n\n                tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E2));\n                tmp2 = multiply(\n                  tmp2,\n                  subtract(subtract(input[i], input[l]), E2)\n                );\n\n                tmp1 = multiply(tmp1, add(subtract(input[i], input[l]), E3));\n                tmp2 = multiply(\n                  tmp2,\n                  subtract(subtract(input[i], input[l]), E3)\n                );\n              }\n            }\n\n            tmp1 = multiply(\n              tmp1,\n              add(\n                add(\n                  multiply(\n                    add(subtract(input[i], input[k]), E1),\n                    add(subtract(input[i], input[k]), E2)\n                  ),\n                  multiply(\n                    add(subtract(input[i], input[k]), E1),\n                    add(subtract(input[i], input[k]), E3)\n                  )\n                ),\n                multiply(\n                  add(subtract(input[i], input[k]), E2),\n                  add(subtract(input[i], input[k]), E3)\n                )\n              )\n            );\n\n            tmp2 = multiply(\n              tmp2,\n              add(\n                add(\n                  multiply(\n                    subtract(subtract(input[i], input[k]), E1),\n                    subtract(subtract(input[i], input[k]), E2)\n                  ),\n                  multiply(\n                    subtract(subtract(input[i], input[k]), E1),\n                    subtract(subtract(input[i], input[k]), E3)\n                  )\n                ),\n                multiply(\n                  subtract(subtract(input[i], input[k]), E2),\n                  subtract(subtract(input[i], input[k]), E3)\n                )\n              )\n            );\n            result[i][i] = add(subtract(tmp1, tmp2), result[i][i]);\n          }\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function matrixComplexToReal(matrix: Complex[][]): number[][] {\n  return [\n    ...matrix.map((row) => [...row.map((c) => c[0]), ...row.map((c) => -c[1])]),\n    ...matrix.map((row) => [...row.map((c) => c[1]), ...row.map((c) => c[0])]),\n  ];\n}\n\nexport function vectorComplexToReal(vector: Complex[]): number[] {\n  return [...vector.map((c) => c[0]), ...vector.map((c) => c[1])];\n}\n\nexport function vectorRealToComplex(vector: number[]): Complex[] {\n  const firstHalf = vector.slice(0, vector.length / 2);\n  const secondHalf = vector.slice(vector.length / 2, vector.length);\n  return firstHalf.map((r, index) => complex(r, secondHalf[index]));\n}\n\nexport function subtractComplexVectors(a: Complex[], b: Complex[]): Complex[] {\n  return a.map((ai, i) => subtract(ai, b[i]));\n}\n\nexport function transpose<T>(matrix: T[][]) {\n  return matrix[0].map((_col, i) => matrix.map((row) => row[i]));\n}\n\nexport type ResultInQ = Complex[]; // length = M\nexport type ResultsInQArray = Complex[][];\n\nfunction complexVectorAbsSum(vector: Complex[]): number {\n  return vector.reduce((acc, c) => acc + abs(c), 0);\n}\n\nconst precision = 1e-10;\n\n// xSeed.length === M\nexport function solveInQ(\n  xSeed: Complex[],\n  q: Complex,\n  config: SolveConfig\n): ResultInQ {\n  let tmp = xSeed.map((c) => copy(c));\n  let tmpAbsSum = complexVectorAbsSum(tmp);\n\n  // count iterations\n\n  for (let i = 0; i < 20; i++) {\n    const A = matrixComplexToReal(eqnsd(tmp, q, config));\n    const b = vectorComplexToReal(eqns(tmp, q, config));\n\n    const solvedRealX = lusolve(A, b) as number[];\n    const x = vectorRealToComplex(solvedRealX);\n\n    tmp = subtractComplexVectors(tmp, x);\n\n    const newTmpAbsSum = complexVectorAbsSum(tmp);\n\n    if (Math.abs(newTmpAbsSum - tmpAbsSum) < precision) {\n      break;\n    }\n\n    tmpAbsSum = newTmpAbsSum;\n  }\n\n  return tmp;\n}\n\nexport function solveInQArray(\n  xSeed: Complex[],\n  qArray: Complex[],\n  config: SolveConfig\n): {\n  results: ResultsInQArray;\n  error?: string;\n} {\n  try {\n    const output: ResultsInQArray = [];\n\n    output.push(xSeed); // initial value = xSeed\n\n    for (let i = 0; i < qArray.length; i++) {\n      output.push(solveInQ(output[output.length - 1], qArray[i], config));\n    }\n\n    return { results: transpose(output.slice(1)) };\n  } catch (error) {\n    console.error(error);\n    return { results: [], error: String(error) };\n  }\n}\n","import * as Comlink from 'comlink';\nimport { solveInQArray } from 'core/solve';\n\nComlink.expose(solveInQArray);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [400], function() { return __webpack_require__(63518); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + \"6851e8d1bfdb3c66ad9d\" + \".bundle.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t589: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkilwsolver\"] = self[\"webpackChunkilwsolver\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","complex","r","i","copy","c","add","a","b","subtract","multiply","eqns","input","q","config","Ex","E1","E2","E3","Ax","AL","AR","result","length","tmp1","tmp2","j","push","eqnsd","Array","fill","undefined","map","k","l","vectorRealToComplex","vector","firstHalf","slice","secondHalf","index","subtractComplexVectors","ai","complexVectorAbsSum","reduce","acc","Math","sqrt","solveInQ","xSeed","matrix","tmp","tmpAbsSum","A","row","newTmpAbsSum","lusolve","abs","Comlink","qArray","output","results","_col","error","console","String","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","x","__webpack_exports__","O","amdD","Error","amdO","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","data","moreModules","runtime","pop","then"],"sourceRoot":""}